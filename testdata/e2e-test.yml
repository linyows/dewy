name: Deploy Testing
description: Verify that the deployment is correct

vars:
  github_token: "{{ GITHUB_TOKEN ?? '' }}"
  aws_access_key_id: "{{ AWS_ACCESS_KEY_ID ?? '' }}"
  aws_secret_access_key: "{{ AWS_SECRET_ACCESS_KEY ?? '' }}"
  google_application_credentials: "{{ GOOGLE_APPLICATION_CREDENTIALS ?? '' }}"

jobs:
- name: Check credentials
  id: check
  steps:
  - name: GITHUB_TOKEN is not empty
    uses: hello
    test: vars.github_token != ''
  - name: AWS_ACCESS_KEY_ID is not empty
    uses: hello
    test: vars.aws_access_key_id != ''
  - name: AWS_SECRET_ACCESS_KEY is not empty
    uses: hello
    test: vars.aws_secret_access_key != ''
  - name: GOOGLE_APPLICATION_CREDENTIALS is not empty
    uses: hello
    test: vars.google_application_credentials != ''

- name: Build dewy
  id: build
  needs: [check]
  steps:
  - name: Go build for {{ vars.command }}-{{ vars.registry }}
    uses: shell
    with:
      cmd: go build -o ./testdata/{{ vars.command }}/{{ vars.registry }}/dewy ./cmd/dewy
    test: status == 0
    iteration:
    - { command: 'server', registry: 'ghr' }
    - { command: 'server', registry: 's3' }
    - { command: 'server', registry: 'gs' }
    - { command: 'assets', registry: 'ghr' }
    - { command: 'assets', registry: 's3' }
    - { command: 'assets', registry: 'gs' }

- name: Create new version
  needs: [build]
  steps:
  - name: Create release
    id: release
    uses: shell
    retry:
      max_attempts: 5
      interval: 3s
    with:
      env:
        GH_TOKEN: "{{ vars.github_token }}"
      cmd: |
        gh release create {{ vars.version }} \
          --repo linyows/dewy-testapp \
          --title {{ vars.version }} \
          --notes "End-to-end Testing by Probe"
    vars:
      version: v3.0.0-{{ unixtime() }}
    test: status == 0
    outputs:
      version: vars.version
    echo: |
      {{res.stdout}}
  - name: Verify release exists
    uses: shell
    retry:
      max_attempts: 10
      interval: 2s
    with:
      env:
        GH_TOKEN: "{{ vars.github_token }}"
      cmd: |
        gh release view {{ outputs.release.version }} \
          --repo linyows/dewy-testapp
    test: status == 0

- name: Run server by Github-Releases registry
  needs: [build]
  steps:
  - name: Server test
    uses: embedded
    with:
      path: ./testdata/jobs/server.yml
      vars:
        github_token: "{{ vars.github_token }}"
        aws_access_key_id: "{{ vars.aws_access_key_id }}"
        aws_secret_access_key: "{{ vars.aws_secret_access_key }}"
        google_application_credentials: "{{ vars.google_application_credentials }}"
        registry: ghr
        registry_url: ghr://linyows/dewy-testapp?pre-release=true
        port: 8000
        log_level: debug
        new_version: "{{ outputs.release.version }}"
    test: res.code == 0

- name: Run server by AWS S3 registry
  needs: [build]
  steps:
  - name: Server test
    uses: embedded
    with:
      path: ./testdata/jobs/server.yml
      vars:
        github_token: "{{ vars.github_token }}"
        aws_access_key_id: "{{ vars.aws_access_key_id }}"
        aws_secret_access_key: "{{ vars.aws_secret_access_key }}"
        google_application_credentials: "{{ vars.google_application_credentials }}"
        registry: s3
        registry_url: s3://ap-northeast-3/dewy-testapp?pre-release=true
        port: 8001
        log_level: debug
        new_version: "{{ outputs.release.version }}"
    test: res.code == 0

- name: Run server by GCloud Storage registry
  needs: [build]
  steps:
  - name: Server test
    uses: embedded
    with:
      path: ./testdata/jobs/server.yml
      vars:
        github_token: "{{ vars.github_token }}"
        aws_access_key_id: "{{ vars.aws_access_key_id }}"
        aws_secret_access_key: "{{ vars.aws_secret_access_key }}"
        google_application_credentials: "{{ vars.google_application_credentials }}"
        registry: gs
        registry_url: gs://dewy-testapp?pre-release=true
        port: 8002
        log_level: debug
        new_version: "{{ outputs.release.version }}"
    test: res.code == 0

- name: Run assets by Github-Releases registry
  needs: [build]
  steps:
  - name: Assets test
    uses: embedded
    with:
      path: ./testdata/jobs/assets.yml
      vars:
        github_token: "{{ vars.github_token }}"
        aws_access_key_id: "{{ vars.aws_access_key_id }}"
        aws_secret_access_key: "{{ vars.aws_secret_access_key }}"
        google_application_credentials: "{{ vars.google_application_credentials }}"
        registry: ghr
        registry_url: ghr://linyows/dewy-testapp?pre-release=true
        port: 9000
        log_level: debug
        new_version: "{{ outputs.release.version }}"
    test: res.code == 0

- name: Run assets by AWS S3 registry
  needs: [build]
  steps:
  - name: Assets test
    uses: embedded
    with:
      path: ./testdata/jobs/assets.yml
      vars:
        github_token: "{{ vars.github_token }}"
        aws_access_key_id: "{{ vars.aws_access_key_id }}"
        aws_secret_access_key: "{{ vars.aws_secret_access_key }}"
        google_application_credentials: "{{ vars.google_application_credentials }}"
        registry: s3
        registry_url: s3://ap-northeast-3/dewy-testapp?pre-release=true
        port: 9001
        log_level: debug
        new_version: "{{ outputs.release.version }}"
    test: res.code == 0

- name: Run assets by GCloud Storage registry
  needs: [build]
  steps:
  - name: Assets test
    uses: embedded
    with:
      path: ./testdata/jobs/assets.yml
      vars:
        github_token: "{{ vars.github_token }}"
        aws_access_key_id: "{{ vars.aws_access_key_id }}"
        aws_secret_access_key: "{{ vars.aws_secret_access_key }}"
        google_application_credentials: "{{ vars.google_application_credentials }}"
        registry: gs
        registry_url: gs://dewy-testapp?pre-release=true
        port: 9002
        log_level: debug
        new_version: "{{ outputs.release.version }}"
    test: res.code == 0
