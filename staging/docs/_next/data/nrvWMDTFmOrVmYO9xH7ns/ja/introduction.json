{"pageProps":{"markdoc":{"content":{"$$mdtype":"Tag","name":"article","attributes":{},"children":[{"$$mdtype":"Tag","name":"Heading","attributes":{"id":"overview","level":1},"children":["Dewyとは？ "]},{"$$mdtype":"Tag","name":"p","attributes":{},"children":["Dewy（デューイー）は、主にGoで作られたアプリケーションを非コンテナ環境において宣言的にデプロイするソフトウェアです。"," ","サーバー上のアプリケーションやデータが常に最新となるようにします。"]},{"$$mdtype":"Tag","name":"Heading","attributes":{"level":2,"id":"背景"},"children":["背景"]},{"$$mdtype":"Tag","name":"p","attributes":{},"children":["Goはコードを各環境に合わせたひとつのバイナリにコンパイルすることができます。 Kubernetesのようなオーケストレーターのある分散システムでは、Goで作られたアプリケーションのデプロイに困ることはないでしょう。 一方で、コンテナではない単一の物理ホストや仮想マシン環境において、Goのバイナリをどうやってデプロイするかの明確な答えはないように思います。 手元からscpやrsyncするshellを書いて使うのか、サーバ構成管理のansibleを使うのか、rubyのcapistranoを使うのか、方法は色々あります。 しかし、複数人のチームで誰がどこにデプロイしたといったオーディットログや情報共有を考えると、そのようなユースケースにマッチするツールがない気がします。"]},{"$$mdtype":"Tag","name":"Heading","attributes":{"level":2,"id":"主な機能"},"children":["主な機能"]},{"$$mdtype":"Tag","name":"ul","attributes":{},"children":[{"$$mdtype":"Tag","name":"li","attributes":{},"children":["宣言的プル型デプロイメント"]},{"$$mdtype":"Tag","name":"li","attributes":{},"children":["グレースフルリスタート"]},{"$$mdtype":"Tag","name":"li","attributes":{},"children":["選択可能なレジストリとアーティファクトストア"]},{"$$mdtype":"Tag","name":"li","attributes":{},"children":["デプロイ状況の通知"]},{"$$mdtype":"Tag","name":"li","attributes":{},"children":["JSON形式対応の構造化ログ"]},{"$$mdtype":"Tag","name":"li","attributes":{},"children":["オーディットログ"]}]},{"$$mdtype":"Tag","name":"Heading","attributes":{"level":2,"id":"dewyが役立つユースケース"},"children":["Dewyが役立つユースケース"]},{"$$mdtype":"Tag","name":"p","attributes":{},"children":["ハイパーバイザー型の仮想サーバや物理サーバなど、ミュータブルなサーバ環境において、"," ","最新バージョンのアプリケーションを動かし続けたい場合にDewyは最適です。"]}]},"frontmatter":{"title":"はじめに","description":"aaaa"},"file":{"path":"/ja/introduction.md"}}},"__N_SSG":true}