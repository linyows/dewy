(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[527],{1577:(n,e,r)=>{"use strict";r.r(e),r.d(e,{__N_SSG:()=>c,default:()=>w,markdoc:()=>h});var t=r(4232),a=r(3423),s=r(3854),p=r(9146),i=r(2665),o=r(3930),y=r(1930);let l={tags:(0,p.X)(i),nodes:(0,p.X)(o),functions:(0,p.X)(y),...(0,p.X)({})},g=new s.Ay.Tokenizer({allowComments:!0}).tokenize('---\ntitle: レジストリ\ndescription: |\n  レジストリは、アプリケーションやファイルのバージョン管理を担うDewyの中核コンポーネントです。\n  Dewyはセマンティックバージョニングに基づいて最新版を自動検出し、継続的なデプロイメントを実現します。\n---\n\n# {% $markdoc.frontmatter.title %} {% #overview %}\n\n{% $markdoc.frontmatter.description %}\n\n## 対応レジストリ\n\nDewyは以下のレジストリタイプに対応しています。\n\n- **GitHub Releases** (`ghr://`): GitHubのリリース機能\n- **AWS S3** (`s3://`): Amazon S3ストレージ\n- **Google Cloud Storage** (`gs://`): Google Cloudストレージ\n- **gRPC** (`grpc://`): カスタムgRPCサーバー\n\n## 共通オプション\n\nすべてのレジストリで使用できる共通オプションがあります。\n\n{% table %}\n* オプション\n* 型\n* 説明\n---\n* `pre-release`\n* bool\n* プレリリースバージョンを含めるかどうか\n---\n* `artifact`\n* string\n* 自動選択されないアーティファクト名を明示指定\n{% /table %}\n\n## GitHub Releases\n\nGitHubリリースをレジストリとして使用する最も一般的な方法です。\n\n### 基本設定\n\n```bash\n# 基本形式\nghr://<owner>/<repo>\n\n# 例\ndewy server --registry ghr://linyows/myapp -- /opt/myapp/current/myapp\n```\n\n### 環境変数\n\n```bash\nexport GITHUB_TOKEN=ghp_xxxxxxxxxxxxxxxxxxxx\n```\n\nGitHubのPersonal Access Tokenまたは、GitHub Actionsの場合は`GITHUB_TOKEN`を設定します。\n\n### オプション付きの例\n\n```bash\n# プレリリース版も含める（ステージング環境）\ndewy server --registry "ghr://linyows/myapp?pre-release=true"\n\n# 特定のアーティファクトを指定\ndewy server --registry "ghr://linyows/myapp?artifact=myapp-server.tar.gz"\n\n# 両方のオプションを使用\ndewy server --registry "ghr://linyows/myapp?pre-release=true&artifact=myapp-server.tar.gz"\n```\n\n### アーティファクトの自動選択\n\nアーティファクト名を指定しない場合、Dewyは以下の規則で自動選択します：\n\n1. 現在のOS（`linux`, `darwin`, `windows`）を含むファイル名\n2. 現在のアーキテクチャ（`amd64`, `arm64`等）を含むファイル名\n3. 最初にマッチしたアーティファクトを選択\n\n例：Linux amd64環境では `myapp_linux_amd64.tar.gz` が自動選択されます。\n\n{% callout type="important" %}\n新しく作成されたリリースについては、CI/CDでのアーティファクトビルド時間を考慮して30分間のグレースピリオドがあります。\nこの間は「アーティファクトが見つからない」エラーが発生しても通知されません。\n{% /callout %}\n\n## AWS S3\n\nS3互換ストレージをレジストリとして使用できます。\n\n### 基本設定\n\n```bash\n# 基本形式\ns3://<region>/<bucket>/<path-prefix>\n\n# 例\ndewy server --registry s3://ap-northeast-1/my-releases/myapp\n```\n\n### 環境変数\n\n```bash\nexport AWS_ACCESS_KEY_ID=AKIAIOSFODNN7EXAMPLE\nexport AWS_SECRET_ACCESS_KEY=wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY\n\n# オプション：エンドポイントURL（S3互換サービス用）\nexport AWS_ENDPOINT_URL=https://s3.isk01.sakurastorage.jp\n```\n\n### オブジェクトパス規則\n\nS3内のオブジェクトは以下の構造で配置する必要があります：\n\n```\n<path-prefix>/<semver>/<artifact>\n```\n\n実際の例：\n\n```\nmy-releases/myapp/v1.2.4/myapp_linux_amd64.tar.gz\nmy-releases/myapp/v1.2.4/myapp_linux_arm64.tar.gz\nmy-releases/myapp/v1.2.4/myapp_darwin_arm64.tar.gz\nmy-releases/myapp/v1.2.3/myapp_linux_amd64.tar.gz\nmy-releases/myapp/v1.2.3/myapp_linux_arm64.tar.gz\nmy-releases/myapp/v1.2.3/myapp_darwin_arm64.tar.gz\n```\n\n### オプション付きの例\n\n```bash\n# カスタムエンドポイント（さくらのクラウド等）\ndewy server --registry "s3://jp-north-1/my-bucket/myapp?endpoint=https://s3.isk01.sakurastorage.jp"\n\n# プレリリース版を含める\ndewy server --registry "s3://us-west-2/releases/myapp?pre-release=true"\n```\n\n## Google Cloud Storage\n\nGoogle Cloud StorageをレジストリとSupport使用できます。\n\n### 基本設定\n\n```bash\n# 基本形式\ngs://<bucket>/<path-prefix>\n\n# 例\ndewy server --registry gs://my-releases-bucket/myapp\n```\n\n### 環境変数\n\n```bash\n# サービスアカウントキーを使用\nexport GOOGLE_APPLICATION_CREDENTIALS=/path/to/service-account.json\n```\n\nまたは、Google Cloud SDKの認証情報やWorkload Identityを使用することも可能です。\n\n### オブジェクトパス規則\n\nS3と同様の構造で配置します：\n\n```\nmyapp/v1.2.4/myapp_linux_amd64.tar.gz\nmyapp/v1.2.4/myapp_darwin_arm64.tar.gz\nmyapp/v1.2.3/myapp_linux_amd64.tar.gz\n```\n\n## gRPC\n\nカスタムgRPCサーバーをレジストリとして使用できます。\n\n### 基本設定\n\n```bash\n# 基本形式\ngrpc://<server-host>\n\n# 例\ndewy server --registry grpc://registry.example.com:9000\n\n# TLS無しの場合\ndewy server --registry "grpc://localhost:9000?no-tls=true"\n```\n\n### 特徴\n\n- gRPCサーバーがアーティファクトURLを動的に提供\n- `pre-release`や`artifact`オプションは使用不可\n- カスタムロジックによる柔軟な制御が可能\n\n## セマンティックバージョニング\n\nDewyはセマンティックバージョニング（semver）に準拠したバージョン管理を行います。\n\n### 対応形式\n\n```bash\n# 標準的なバージョン\nv1.2.3\n1.2.3\n\n# プレリリース版\nv1.2.3-rc\nv1.2.3-beta.2\nv1.2.3-alpha.1\n```\n\n### プレリリース版の使い分け\n\n```bash\n# 本番環境（安定版のみ）\ndewy server --registry ghr://myorg/myapp\n\n# ステージング環境（プレリリース版も含む）\ndewy server --registry "ghr://myorg/myapp?pre-release=true"\n```\n\n## CI/CDパイプラインでの使用\n\n```bash\n# GitHub Actions\n- name: Deploy with Dewy\n  env:\n    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}\n  run: |\n    dewy server --registry ghr://${{ github.repository }} \\\n      --log-level info --port 8080 -- /opt/app/current/app\n```\n\n## マルチステージデプロイメント\n\n```bash\n# ステージング環境\nENVIRONMENT=staging dewy server \\\n  --registry "ghr://myorg/myapp?pre-release=true" \\\n  --notifier "slack://staging-deploy?title=myapp-staging"\n\n# 本番環境\nENVIRONMENT=production dewy server \\\n  --registry "ghr://myorg/myapp" \\\n  --notifier "slack://prod-deploy?title=myapp-prod"\n```\n\n## トラブルシューティング\n\n### アーティファクトが見つからない\n\n1. **バージョンタグの確認**: セマンティックバージョニングに準拠しているか\n2. **アーティファクト名の確認**: OS/アーキテクチャが含まれているか\n3. **権限の確認**: 認証情報が正しく設定されているか\n\n### デバッグ方法\n\n```bash\n# デバッグログを有効にして詳細を確認\ndewy server --registry ghr://owner/repo --log-level debug\n```\n\nレジストリは Dewy の動作の中核となる重要なコンポーネントです。用途に応じて適切なレジストリタイプを選択し、効率的なデプロイメント環境を構築してください。'),m=s.Ay.parse(g,{slots:!1}),u=m.attributes.frontmatter?a.Ay.load(m.attributes.frontmatter):{},{components:d}=(0,p._)(l);var c=!0;let h={frontmatter:u};function w(n){let e=n.markdoc;return s.ZR.react(e.content,t,{components:{...d,...n.components}})}},1930:(n,e,r)=>{"use strict";r.r(e),r.d(e,{includes:()=>t,upper:()=>a});let t={transform(n){let[e,r]=Object.values(n);return!!Array.isArray(e)&&e.includes(r)}},a={transform(n){let e=n[0];return"string"==typeof e?e.toUpperCase():e}}},2665:(n,e,r)=>{"use strict";r.r(e),r.d(e,{callout:()=>t});let t={render:r(9499).Pq,children:["paragraph","tag","list"],attributes:{type:{type:String,default:"note",matches:["tip","note","important","warning","caution"],errorLevel:"critical"},title:{type:String}}}},3930:(n,e,r)=>{"use strict";r.r(e),r.d(e,{fence:()=>s,heading:()=>p,table:()=>i});var t=r(3854),a=r(9499);let s={render:a.NG,attributes:t.a9.fence.attributes},p={render:a.DZ,children:["inline"],attributes:{id:{type:String},level:{type:Number,required:!0,default:1},className:{type:String}},transform(n,e){let r=n.transformAttributes(e),a=n.transformChildren(e),s=r.id&&"string"==typeof r.id?r.id:a.filter(n=>"string"==typeof n).join(" ").replace(/[?]/g,"").replace(/\s+/g,"-").toLowerCase();return new t.vw(this.render,{...r,id:s},a)}},i={render:a.XI,attributes:t.a9.table.attributes}},4480:(n,e,r)=>{(window.__NEXT_P=window.__NEXT_P||[]).push(["/ja/registry",function(){return r(1577)}])}},n=>{n.O(0,[849,454,636,593,792],()=>n(n.s=4480)),_N_E=n.O()}]);