// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.1
// 	protoc        (unknown)
// source: dewy.proto

package dewy

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// CurrentRequest is the request to get the current artifact.
type CurrentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Arch        string  `protobuf:"bytes,1,opt,name=arch,proto3" json:"arch,omitempty"`                                        // arch is the CPU architecture of deployment environment.
	Os          string  `protobuf:"bytes,2,opt,name=os,proto3" json:"os,omitempty"`                                            // os is the operating system of deployment environment.
	ArifactName *string `protobuf:"bytes,3,opt,name=arifact_name,json=arifactName,proto3,oneof" json:"arifact_name,omitempty"` // artifact_name is the name of the artifact to fetch.
}

func (x *CurrentRequest) Reset() {
	*x = CurrentRequest{}
	mi := &file_dewy_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CurrentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CurrentRequest) ProtoMessage() {}

func (x *CurrentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dewy_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CurrentRequest.ProtoReflect.Descriptor instead.
func (*CurrentRequest) Descriptor() ([]byte, []int) {
	return file_dewy_proto_rawDescGZIP(), []int{0}
}

func (x *CurrentRequest) GetArch() string {
	if x != nil {
		return x.Arch
	}
	return ""
}

func (x *CurrentRequest) GetOs() string {
	if x != nil {
		return x.Os
	}
	return ""
}

func (x *CurrentRequest) GetArifactName() string {
	if x != nil && x.ArifactName != nil {
		return *x.ArifactName
	}
	return ""
}

// CurrentResponse is the response to get the current artifact.
type CurrentResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`                                      // id uniquely identifies the response.
	Tag         string `protobuf:"bytes,2,opt,name=tag,proto3" json:"tag,omitempty"`                                    // tag uniquely identifies the artifact concerned.
	ArtifactUrl string `protobuf:"bytes,3,opt,name=artifact_url,json=artifactUrl,proto3" json:"artifact_url,omitempty"` // artifact_url is the URL to download the artifact.
}

func (x *CurrentResponse) Reset() {
	*x = CurrentResponse{}
	mi := &file_dewy_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CurrentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CurrentResponse) ProtoMessage() {}

func (x *CurrentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dewy_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CurrentResponse.ProtoReflect.Descriptor instead.
func (*CurrentResponse) Descriptor() ([]byte, []int) {
	return file_dewy_proto_rawDescGZIP(), []int{1}
}

func (x *CurrentResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *CurrentResponse) GetTag() string {
	if x != nil {
		return x.Tag
	}
	return ""
}

func (x *CurrentResponse) GetArtifactUrl() string {
	if x != nil {
		return x.ArtifactUrl
	}
	return ""
}

// ReportRequest is the request to report the result of deploying the artifact.
type ReportRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id  string  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`         // id is the ID of the response.
	Tag string  `protobuf:"bytes,2,opt,name=tag,proto3" json:"tag,omitempty"`       // tag is the current tag of deployed artifact.
	Err *string `protobuf:"bytes,3,opt,name=err,proto3,oneof" json:"err,omitempty"` // err is the error that occurred during deployment. If Err is nil, the deployment is considered successful.
}

func (x *ReportRequest) Reset() {
	*x = ReportRequest{}
	mi := &file_dewy_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReportRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReportRequest) ProtoMessage() {}

func (x *ReportRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dewy_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReportRequest.ProtoReflect.Descriptor instead.
func (*ReportRequest) Descriptor() ([]byte, []int) {
	return file_dewy_proto_rawDescGZIP(), []int{2}
}

func (x *ReportRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ReportRequest) GetTag() string {
	if x != nil {
		return x.Tag
	}
	return ""
}

func (x *ReportRequest) GetErr() string {
	if x != nil && x.Err != nil {
		return *x.Err
	}
	return ""
}

var File_dewy_proto protoreflect.FileDescriptor

var file_dewy_proto_rawDesc = []byte{
	0x0a, 0x0a, 0x64, 0x65, 0x77, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x04, 0x64, 0x65,
	0x77, 0x79, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0x6d, 0x0a, 0x0e, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x61, 0x72, 0x63, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x61, 0x72, 0x63, 0x68, 0x12, 0x0e, 0x0a, 0x02, 0x6f, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x6f, 0x73, 0x12, 0x26, 0x0a, 0x0c, 0x61, 0x72, 0x69, 0x66, 0x61, 0x63, 0x74,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0b, 0x61,
	0x72, 0x69, 0x66, 0x61, 0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x42, 0x0f, 0x0a,
	0x0d, 0x5f, 0x61, 0x72, 0x69, 0x66, 0x61, 0x63, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x56,
	0x0a, 0x0f, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x61, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x74, 0x61, 0x67, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x5f,
	0x75, 0x72, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x72, 0x74, 0x69, 0x66,
	0x61, 0x63, 0x74, 0x55, 0x72, 0x6c, 0x22, 0x50, 0x0a, 0x0d, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x61, 0x67, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x74, 0x61, 0x67, 0x12, 0x15, 0x0a, 0x03, 0x65, 0x72, 0x72,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x03, 0x65, 0x72, 0x72, 0x88, 0x01, 0x01,
	0x42, 0x06, 0x0a, 0x04, 0x5f, 0x65, 0x72, 0x72, 0x32, 0x80, 0x01, 0x0a, 0x0f, 0x52, 0x65, 0x67,
	0x69, 0x73, 0x74, 0x72, 0x79, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x36, 0x0a, 0x07,
	0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x14, 0x2e, 0x64, 0x65, 0x77, 0x79, 0x2e, 0x43,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e,
	0x64, 0x65, 0x77, 0x79, 0x2e, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x35, 0x0a, 0x06, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x13,
	0x2e, 0x64, 0x65, 0x77, 0x79, 0x2e, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x42, 0x75, 0x0a, 0x08, 0x63,
	0x6f, 0x6d, 0x2e, 0x64, 0x65, 0x77, 0x79, 0x42, 0x09, 0x44, 0x65, 0x77, 0x79, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x50, 0x01, 0x5a, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x6c, 0x69, 0x6e, 0x79, 0x6f, 0x77, 0x73, 0x2f, 0x64, 0x65, 0x77, 0x79, 0x2f, 0x72, 0x65,
	0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x2f, 0x67, 0x72, 0x70, 0x63, 0x2f, 0x67, 0x65, 0x6e, 0x2f,
	0x64, 0x65, 0x77, 0x79, 0xa2, 0x02, 0x03, 0x44, 0x58, 0x58, 0xaa, 0x02, 0x04, 0x44, 0x65, 0x77,
	0x79, 0xca, 0x02, 0x04, 0x44, 0x65, 0x77, 0x79, 0xe2, 0x02, 0x10, 0x44, 0x65, 0x77, 0x79, 0x5c,
	0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x04, 0x44, 0x65,
	0x77, 0x79, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_dewy_proto_rawDescOnce sync.Once
	file_dewy_proto_rawDescData = file_dewy_proto_rawDesc
)

func file_dewy_proto_rawDescGZIP() []byte {
	file_dewy_proto_rawDescOnce.Do(func() {
		file_dewy_proto_rawDescData = protoimpl.X.CompressGZIP(file_dewy_proto_rawDescData)
	})
	return file_dewy_proto_rawDescData
}

var file_dewy_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_dewy_proto_goTypes = []any{
	(*CurrentRequest)(nil),  // 0: dewy.CurrentRequest
	(*CurrentResponse)(nil), // 1: dewy.CurrentResponse
	(*ReportRequest)(nil),   // 2: dewy.ReportRequest
	(*emptypb.Empty)(nil),   // 3: google.protobuf.Empty
}
var file_dewy_proto_depIdxs = []int32{
	0, // 0: dewy.RegistryService.Current:input_type -> dewy.CurrentRequest
	2, // 1: dewy.RegistryService.Report:input_type -> dewy.ReportRequest
	1, // 2: dewy.RegistryService.Current:output_type -> dewy.CurrentResponse
	3, // 3: dewy.RegistryService.Report:output_type -> google.protobuf.Empty
	2, // [2:4] is the sub-list for method output_type
	0, // [0:2] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_dewy_proto_init() }
func file_dewy_proto_init() {
	if File_dewy_proto != nil {
		return
	}
	file_dewy_proto_msgTypes[0].OneofWrappers = []any{}
	file_dewy_proto_msgTypes[2].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_dewy_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_dewy_proto_goTypes,
		DependencyIndexes: file_dewy_proto_depIdxs,
		MessageInfos:      file_dewy_proto_msgTypes,
	}.Build()
	File_dewy_proto = out.File
	file_dewy_proto_rawDesc = nil
	file_dewy_proto_goTypes = nil
	file_dewy_proto_depIdxs = nil
}
